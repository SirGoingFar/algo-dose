Week 1 Question

ALGO-DOSE for next week



Author: Akintunde (eaolanrewaju@gmail.com)

Question: Implement an algorithm to determine if a string has all its character(s) unique.

Example:  "ABcD" returns TRUE, "Aabc" returns TRUE, "AAbc" returns FALSE and "dBcd" returns FALSE.

Solution Variants
What if you CAN use multiple data structures?
What if you CANNOT use more than one data structure? (Primitive types ain't treated as data structures in this case)

Language: Any language of choice in [Java, Kotlin, JavaScript]


Submission Format
//What if you CAN use multiple data structures
//Time Complexity: O(N^2)
//Space Complexity: O(N)
function boolean hasUniqueCharactersV1(String string){

    boolean isUnique = false

   isUnique = //implementation comes here

   return isUnique

}


//What if you CANNOT use more than one data structure
//Time Complexity: O(N)
//Space Complexity: O(1)
function boolean hasUniqueCharactersV2(String string){

    boolean isUnique = false

   isUnique = //implementation comes here

   return isUnique

}


Due date: Thursday 16/05/2020, 12PM

NB: Please put the Big O Notation into consideration (both Time and Space). At times, algorithm execution time MAYBE a trade off for memory space needed and vice versa.


Thanks!